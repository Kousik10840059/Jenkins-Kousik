Day 10





**Q. Setup Auto Scaling**





Create a Template -> us-east-1a -> select security group-> allow port 22 (SSH) -> run script if any->launch



select the template -> actions -> create auto scaling group



Instance type requirement ->



Manual -> t2.micro



Name -> on demand instance -> 2



Network select 1a,1b,1c,1d



Next -> load balancer -> attach new -> internet facing -> Create a target group -> No VPC -> Next



Group capacity -> desired 2 -> scaling min 2 max 6 -> Target tracking scaling policy -> avg cpu utilization -> target value 50 -> instance warmup 180 secs



Instance maintenance -> Launch before terminating or custom -> next



create autoscaling group -> wait for it to go live



top command to check cpu utilization



DONT RUN THIS COMMAND - ITS FOR TESTING PURPOSE (NOT TO BE RUN ON PRODUCTION OR DEVELOPMENT)

THIS COMMAND IS USED TO GIVE STRESS ON THE CPU -> yes > /dev/null \&   (also note the process name to kill it easily)



then top to check cpu utilization again



Wait 3 mins till 6 machines go up -



TO KILL ->

Kill 26531 (process name)



------------------------------------------------------------------------------------------------------------------------



VPC IS A REGION BASED SERVICE - in every region by default there is one vpc



Q. Hosting a VPC -



V - VPC -> cidr 10.0.0.0/16
I - IGW
S - Subnet
R - Route Table



-Search VPC 

-Create VPC

* Vpc Setting -> vpc only - no ipv6 cidr -> give range 10.0.0.0/16 -> create



Now make IGW(internet gateway)

Name tag - devops-igw -> create



Now go to subnet -:

Create subnet ->  -> devops-vpc -> give name -public subnet  -> zone us-east-1a -> subnet cidr -> 10.0.0.0/24 -> create subnet



Create another subnet -> private subnet -> us-east-1b -> create





Now launch a instance- select devops-vpc - select public subnet -> allow port ssh 22 and http -> script if any -> launch instance

Launch another instance - select devops-vpc ->select private subnet -> subnet cidr -> 10.0.1.0/24 -> allow 22 and http -> launch instance





Go to IGW -> select the igw -> attach to devops-vpc



Go to Route tables -> create -> name it -> select devops vpc -> create -> edit route -> add route internet gateway -> create

edit subnet association -> edit and add public -> save



Go to instance and allow ICMP ipv4 protocol in inbound rules -> save





Copy the content from the key in the computer 



GO to the public machine vim devops-host.pem -> and paste the key save exit

chmod 400 devops-host.pem



ssh -i devops-host.pem ec2-user@privateip



NOW YOU WILL BE CONNECTED TO THE PRIVATE MACHINE



Now to use internet in private machine



GO to NAT Gateway



Name anything -> subnet public -> public ip -> create



Go to route table -> create route table private rt name -> devops -> create

then edit route -> add route -> nat gateway -> save

go to route table subnet assoications -> edit and add private-subnet there



Now go to instance and ping google.com and it will





Q. Create a vpc with 2 subnet -> in public deploy one web server in private deploy one and private should be available publicly


